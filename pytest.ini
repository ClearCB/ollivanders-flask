[pytest]

markers= 

##### Domain #####

    # test_Item

    test_repr: check the method that allow us to represent the object as wanted

    # test_NormalItem

    test_set_quality: check the method that update and set the new quality. 
    test_update_quality: check the method that update correctly the new quality

    # test_AgedBrie

    test_update_quality: check the method that update correctly the new quality

    # test_Backstage

    test_update_quality: check the method that update correctly the new quality

    # test_Conjured

    test_update_quality: check the method that update correctly the new quality

    # test_Sulfuras

    test_update_quality: check the method that update correctly the new quality

    # test_GildedRose

    test_update_inventory: check the method that update correctly the new quality

##### REPOSITORY #####

    # test_models

    test_constructor: check the constructor of the models used to create a document in mondodb
    test_to_collection: check the method that return a new document to insert it at MongoDB
    test_to_object: check the method that retrun an object with the class that is needed

    # test_Database

    test_db_connection: check the connection to MongoDB
    test_get_client: check that the client correctly works
    test_get_database: check that the database is correctly set
    test_correct_item: check that the item is check correclty
    test_insert_item: check that the insert item works well
    test_get_inventory: check that the database returns the correct inventory
    test_get_item: check that mongo return correclty one document
    test_delete_item: check that mongo correcly delete one document
    test_update_item: check that it can be modified all the correct keys in mongo
    test_set_working_collection: check that the working collection is set and get correctly 
    test_init_db: drop and create the database correcly


##### Services ######

    test_create_one: test the method that interact with database but separatly to create a document 
    test_get_one: test the method that interact with database but separatly to get a document
    test_get_inventory: test the method that interact with database but separatly to get the entire collection
    test_update_one: test the method that interact with database but separatly to update a document
    test_delete_one: test the method that interact with database but separatly to delete a document

##### Resources #####

    test_inventario: test the first endpoint that return the full inventory